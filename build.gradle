plugins {
	id 'org.springframework.boot' version '2.6.6'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'jacoco'
	id 'idea'
}

group = 'br.com.softdesigner'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

sourceSets {
	integrationTest {
		java {
			compileClasspath += main.output + test.output
			runtimeClasspath += main.output + test.output
		}
	}
}

idea {
	module {
		testSourceDirs += sourceSets.integrationTest.java.srcDirs
		testSourceDirs += sourceSets.integrationTest.resources.srcDirs
	}
}

configurations {
	compileOnly.extendsFrom annotationProcessor
	integrationTestImplementation.extendsFrom testImplementation
	integrationTestRuntime.extendsFrom testRuntime
}

repositories {
	mavenCentral()
}

def springdocVersion = '1.4.6'
def springCloudVersion = '2021.0.1'

dependencies {
	// Spring
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-amqp'

	// Swagger open api
	implementation "org.springdoc:springdoc-openapi-webflux-core:$springdocVersion"
	implementation "org.springdoc:springdoc-openapi-webflux-ui:$springdocVersion"

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	implementation 'com.playtika.reactivefeign:feign-reactor-spring-cloud-starter:3.1.2'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}

	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

	// Test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.amqp:spring-rabbit-test'
	testImplementation 'io.projectreactor:reactor-test'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

apply from: "$rootDir/gradle/test.gradle"
